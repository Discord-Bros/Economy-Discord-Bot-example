"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WelcomeCategory = void 0;
const Category_1 = require("./Category");
class WelcomeCategory extends Category_1.Category {
    constructor() {
        super('', 'https://welcome-imgs.some-random-api.ml');
    }
    join(options) {
        return this.requestBuffer(`/img/${options.template}/${options.background}`, {
            type: 'join',
            username: options.tag.split('#')[0],
            discriminator: options.tag.split('#')[1],
            guildName: options.guildName,
            memberCount: options.memberCount,
            avatar: options.avatar,
            textcolor: options.textcolor
        });
    }
    leave(options) {
        return this.requestBuffer(`/img/${options.template}/${options.background}`, {
            type: 'leave',
            username: options.tag.split('#')[0],
            discriminator: options.tag.split('#')[1],
            guildName: options.guildName,
            memberCount: options.memberCount,
            avatar: options.avatar,
            textcolor: options.textcolor
        });
    }
}
exports.WelcomeCategory = WelcomeCategory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2VsY29tZUNhdGVnb3J5LmpzIiwic291cmNlUm9vdCI6InNyYy8iLCJzb3VyY2VzIjpbInN0cnVjdHVyZXMvV2VsY29tZUNhdGVnb3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHlDQUFzQztBQWV0QyxNQUFhLGVBQWdCLFNBQVEsbUJBQVE7SUFJNUM7UUFDQyxLQUFLLENBQUMsRUFBRSxFQUFFLHlDQUF5QyxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQU9NLElBQUksQ0FBQyxPQUF1QjtRQUNsQyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxPQUFPLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxVQUFVLEVBQUUsRUFBRTtZQUMzRSxJQUFJLEVBQUUsTUFBTTtZQUNaLFFBQVEsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN4QyxTQUFTLEVBQUUsT0FBTyxDQUFDLFNBQVM7WUFDNUIsV0FBVyxFQUFFLE9BQU8sQ0FBQyxXQUFXO1lBQ2hDLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTTtZQUN0QixTQUFTLEVBQUUsT0FBTyxDQUFDLFNBQVM7U0FDNUIsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQU9NLEtBQUssQ0FBQyxPQUF1QjtRQUNuQyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxPQUFPLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxVQUFVLEVBQUUsRUFBRTtZQUMzRSxJQUFJLEVBQUUsT0FBTztZQUNiLFFBQVEsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN4QyxTQUFTLEVBQUUsT0FBTyxDQUFDLFNBQVM7WUFDNUIsV0FBVyxFQUFFLE9BQU8sQ0FBQyxXQUFXO1lBQ2hDLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTTtZQUN0QixTQUFTLEVBQUUsT0FBTyxDQUFDLFNBQVM7U0FDNUIsQ0FBQyxDQUFDO0lBQ0osQ0FBQztDQUNEO0FBekNELDBDQXlDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhdGVnb3J5IH0gZnJvbSAnLi9DYXRlZ29yeSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgV2VsY29tZU9wdGlvbnMge1xuXHR0ZW1wbGF0ZTogMSB8IDIgfCAzIHwgNDtcblx0YmFja2dyb3VuZDogJ3N0YXJzJyB8ICdzdGFyczInIHwgJ3JhaW5ib3ctZ3JhZGllbnQnIHwgJ3JhaW5ib3cnIHwgJ3N1bnNldCcgfCAnbmlnaHQnIHwgJ2Jsb2JkYXknIHwgJ2Jsb2JuaWdodCcgfCAnc3BhY2UnO1xuXHR0YWc6IHN0cmluZztcblx0Z3VpbGROYW1lOiBzdHJpbmc7XG5cdG1lbWJlckNvdW50OiBudW1iZXI7XG5cdGF2YXRhcjogc3RyaW5nO1xuXHR0ZXh0Y29sb3I6ICdyZWQnIHwgJ29yYW5nZScgfCAneWVsbG93JyB8ICdncmVlbicgfCAnYmx1ZScgfCAnaW5kaWdvJyB8ICdwdXJwbGUnIHwgJ3BpbmsnIHwgJ2JsYWNrJyB8ICd3aGl0ZSc7XG59XG5cbi8qKlxuICogV2VsY29tZSBDYXRlZ29yeSAtIGluY2x1ZGVzIHdlbGNvbWUgaW1hZ2VzIGVuZHBvaW50c1xuICovXG5leHBvcnQgY2xhc3MgV2VsY29tZUNhdGVnb3J5IGV4dGVuZHMgQ2F0ZWdvcnkge1xuXHQvKipcblx0ICogQ3JlYXRlIG5ldyBXZWxjb21lQ2F0ZWdvcnlcblx0ICovXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcblx0XHRzdXBlcignJywgJ2h0dHBzOi8vd2VsY29tZS1pbWdzLnNvbWUtcmFuZG9tLWFwaS5tbCcpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEdldCBqb2luIGltYWdlXG5cdCAqIEBwYXJhbSBvcHRpb25zIHtXZWxjb21lT3B0aW9uc30gb3B0aW9ucyBmb3IgaW1hZ2UgZ2VuZXJhdGlvblxuXHQgKiBAc2VlIGh0dHBzOi8vd2VsY29tZS1pbWdzLnNvbWUtcmFuZG9tLWFwaS5tbC9kb2N1bWVudGF0aW9uXG5cdCAqL1xuXHRwdWJsaWMgam9pbihvcHRpb25zOiBXZWxjb21lT3B0aW9ucyk6IFByb21pc2U8QnVmZmVyPiB7XG5cdFx0cmV0dXJuIHRoaXMucmVxdWVzdEJ1ZmZlcihgL2ltZy8ke29wdGlvbnMudGVtcGxhdGV9LyR7b3B0aW9ucy5iYWNrZ3JvdW5kfWAsIHtcblx0XHRcdHR5cGU6ICdqb2luJyxcblx0XHRcdHVzZXJuYW1lOiBvcHRpb25zLnRhZy5zcGxpdCgnIycpWzBdLFxuXHRcdFx0ZGlzY3JpbWluYXRvcjogb3B0aW9ucy50YWcuc3BsaXQoJyMnKVsxXSxcblx0XHRcdGd1aWxkTmFtZTogb3B0aW9ucy5ndWlsZE5hbWUsXG5cdFx0XHRtZW1iZXJDb3VudDogb3B0aW9ucy5tZW1iZXJDb3VudCxcblx0XHRcdGF2YXRhcjogb3B0aW9ucy5hdmF0YXIsXG5cdFx0XHR0ZXh0Y29sb3I6IG9wdGlvbnMudGV4dGNvbG9yXG5cdFx0fSk7XG5cdH1cblxuXHQvKipcblx0ICogR2V0IGxlYXZlIGltYWdlXG5cdCAqIEBwYXJhbSBvcHRpb25zIHtXZWxjb21lT3B0aW9uc30gb3B0aW9ucyBmb3IgaW1hZ2UgZ2VuZXJhdGlvblxuXHQgKiBAc2VlIGh0dHBzOi8vd2VsY29tZS1pbWdzLnNvbWUtcmFuZG9tLWFwaS5tbC9kb2N1bWVudGF0aW9uXG5cdCAqL1xuXHRwdWJsaWMgbGVhdmUob3B0aW9uczogV2VsY29tZU9wdGlvbnMpOiBQcm9taXNlPEJ1ZmZlcj4ge1xuXHRcdHJldHVybiB0aGlzLnJlcXVlc3RCdWZmZXIoYC9pbWcvJHtvcHRpb25zLnRlbXBsYXRlfS8ke29wdGlvbnMuYmFja2dyb3VuZH1gLCB7XG5cdFx0XHR0eXBlOiAnbGVhdmUnLFxuXHRcdFx0dXNlcm5hbWU6IG9wdGlvbnMudGFnLnNwbGl0KCcjJylbMF0sXG5cdFx0XHRkaXNjcmltaW5hdG9yOiBvcHRpb25zLnRhZy5zcGxpdCgnIycpWzFdLFxuXHRcdFx0Z3VpbGROYW1lOiBvcHRpb25zLmd1aWxkTmFtZSxcblx0XHRcdG1lbWJlckNvdW50OiBvcHRpb25zLm1lbWJlckNvdW50LFxuXHRcdFx0YXZhdGFyOiBvcHRpb25zLmF2YXRhcixcblx0XHRcdHRleHRjb2xvcjogb3B0aW9ucy50ZXh0Y29sb3Jcblx0XHR9KTtcblx0fVxufVxuIl19